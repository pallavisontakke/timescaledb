Parsed test spec with 3 sessions

starting permutation: s3_lock_enable s1_create_dist_rp s2_insert s3_lock_count s3_lock_release
delete_data_node
----------------
t               
(1 row)

node_name  
-----------
data_node_1
(1 row)

node_name  
-----------
data_node_2
(1 row)

node_name  
-----------
data_node_3
(1 row)

created
-------
t      
(1 row)

step s3_lock_enable: SELECT debug_waitpoint_enable('create_distributed_restore_point_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s1_test'); <waiting ...>
step s2_insert: INSERT INTO disttable VALUES ('2019-08-02 10:45', 0, 0.0); <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               2
(1 row)

step s3_lock_release: SELECT debug_waitpoint_release('create_distributed_restore_point_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)

step s2_insert: <... completed>

starting permutation: s2_begin s2_insert s3_lock_enable s1_create_dist_rp s3_lock_count s2_commit s3_lock_count s3_lock_release
delete_data_node
----------------
t               
(1 row)

node_name  
-----------
data_node_1
(1 row)

node_name  
-----------
data_node_2
(1 row)

node_name  
-----------
data_node_3
(1 row)

created
-------
t      
(1 row)

step s2_begin: BEGIN;
step s2_insert: INSERT INTO disttable VALUES ('2019-08-02 10:45', 0, 0.0);
step s3_lock_enable: SELECT debug_waitpoint_enable('create_distributed_restore_point_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s1_test'); <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               1
(1 row)

step s2_commit: COMMIT; <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               2
(1 row)

step s3_lock_release: SELECT debug_waitpoint_release('create_distributed_restore_point_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)

step s2_commit: <... completed>

starting permutation: s3_lock_enable s1_create_dist_rp s2_create_dist_rp s3_lock_count s3_lock_release
delete_data_node
----------------
t               
(1 row)

node_name  
-----------
data_node_1
(1 row)

node_name  
-----------
data_node_2
(1 row)

node_name  
-----------
data_node_3
(1 row)

created
-------
t      
(1 row)

step s3_lock_enable: SELECT debug_waitpoint_enable('create_distributed_restore_point_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s1_test'); <waiting ...>
step s2_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s2_test'); <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               2
(1 row)

step s3_lock_release: SELECT debug_waitpoint_release('create_distributed_restore_point_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)

step s2_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)


starting permutation: s3_lock_enable s1_create_dist_rp s2_dist_exec s3_lock_count s3_lock_release
delete_data_node
----------------
t               
(1 row)

node_name  
-----------
data_node_1
(1 row)

node_name  
-----------
data_node_2
(1 row)

node_name  
-----------
data_node_3
(1 row)

created
-------
t      
(1 row)

step s3_lock_enable: SELECT debug_waitpoint_enable('create_distributed_restore_point_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s1_test'); <waiting ...>
step s2_dist_exec: CALL distributed_exec('SELECT true;', transactional => true); <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               2
(1 row)

step s3_lock_release: SELECT debug_waitpoint_release('create_distributed_restore_point_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)

step s2_dist_exec: <... completed>

starting permutation: s3_lock_enable s1_create_dist_rp s2_create_dist_ht s3_lock_count s3_lock_release
delete_data_node
----------------
t               
(1 row)

node_name  
-----------
data_node_1
(1 row)

node_name  
-----------
data_node_2
(1 row)

node_name  
-----------
data_node_3
(1 row)

created
-------
t      
(1 row)

step s3_lock_enable: SELECT debug_waitpoint_enable('create_distributed_restore_point_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s1_test'); <waiting ...>
step s2_create_dist_ht: 
	CREATE TABLE disttable2(time timestamptz NOT NULL, device int, temp float);
	SELECT created FROM create_distributed_hypertable('disttable2', 'time', 'device');
 <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               2
(1 row)

step s3_lock_release: SELECT debug_waitpoint_release('create_distributed_restore_point_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)

step s2_create_dist_ht: <... completed>
created
-------
t      
(1 row)


starting permutation: s3_lock_enable s1_create_dist_rp s2_drop_dist_ht s3_lock_count s3_lock_release
delete_data_node
----------------
t               
(1 row)

node_name  
-----------
data_node_1
(1 row)

node_name  
-----------
data_node_2
(1 row)

node_name  
-----------
data_node_3
(1 row)

created
-------
t      
(1 row)

step s3_lock_enable: SELECT debug_waitpoint_enable('create_distributed_restore_point_lock');
debug_waitpoint_enable
----------------------
                      
(1 row)

step s1_create_dist_rp: SELECT restore_point > pg_lsn('0/0') as valid_lsn FROM create_distributed_restore_point('s1_test'); <waiting ...>
step s2_drop_dist_ht: DROP TABLE disttable2; <waiting ...>
step s3_lock_count: 
	SELECT waitpoint_locks('create_distributed_restore_point_lock') as cdrp_locks, 
	       remote_txn_locks() as remote_txn_locks;

cdrp_locks|remote_txn_locks
----------+----------------
         2|               2
(1 row)

step s3_lock_release: SELECT debug_waitpoint_release('create_distributed_restore_point_lock');
debug_waitpoint_release
-----------------------
                       
(1 row)

step s1_create_dist_rp: <... completed>
valid_lsn
---------
t        
t        
t        
t        
(4 rows)

step s2_drop_dist_ht: <... completed>
